<?php

function hook_permission() {
  return array(
    'place a bet' => array(
      'title' => t('Place a PMB bet'), 
      'description' => t('Allow users to place a PMB bete.'),
    ),
  );
}

function pmb_node_delete($node) {
  db_delete('pmb_bets')
    ->condition('nid', $node->nid)
    ->execute();
}

function pmb_menu() {
  $items['pmb/add/%node'] = array(
    'page callback' => 'pmb_bet_add',
    'page arguments' => array(2),
    'access arguments' => array('place a bet'),
  );

  return $items;
}

/**
 * Page callback for a form to add bets.
 */
function pmb_bet_add($node, $delta = NULL) {
  if ($node->type != 'question') {
    return drupal_access_denied();
  }
  
  if (empty($node->field_outcome['und'])) {
    return t('There are no outcomes associated with this question, please contact the question author and have them add outcomes.'); 
  }
  
  // TODO: make sure they have money to bet.
  drupal_set_title(t('Bet on %title', array('%title' => $node->title)), PASS_THROUGH);
  
  return drupal_get_form('pmb_bet_add_form', $node, $delta);
}

function pmb_bet_add_form($form, &$form_state, $node, $default_delta = NULL) {
  // TODO  to all their money
  // TODOlow: provide way for user to set default bet size
  // TODOlow: allow user with some admin perm to bet on behalf of others.
  $form['pmb_bet_amount'] = array(
    '#type' => 'textfield',
    '#title' => t('Amount to bet'),
    '#default_value' => 100,
  );
  
  $outcomes = $node->field_outcome['und'];
  foreach ($outcomes as $delta => $data) {
    $options[$delta] = $data['safe_value'];
  }

  $form['pmb_bet_outcome'] = array(
    '#title' => t('Selected outcome'),
    '#type' => 'radios',
    '#options' => $options,
  );
  if (isset($options[$default_delta])) {
    $form['pmb_bet_outcome']['#default_value'] = $default_delta;
  }
  
  $form['pmb_bet_nid'] = array('#type' => 'value', '#value' => $node->nid);
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Bet'),
  );
  return $form;
}

function pmb_bet_add_form_validate($form, &$form_state) {
  // TODO: Confirm they have money.
  // TODO: Confirm the bet is still open.
}

function pmb_bet_add_form_submit($form, &$form_state) {
  global $user;
  $values = $form_state['values'];
  $blah = db_insert('pmb_bets')
    ->fields(array(
      'uid' => $user->uid,
      'amount' => $values['pmb_bet_amount'],
      'nid' => $values['pmb_bet_nid'],
      'delta' => $values['pmb_bet_outcome'],
      'created' => REQUEST_TIME,
    ))
    ->execute();
  $node = node_load($values['pmb_bet_nid']);
  drupal_set_message(t('Placed your bet for %amount on %outcome of %title', array('%amount' => $values['pmb_bet_amount'], '%outcome' => $node->field_outcome['und'][$values['pmb_bet_outcome']]['value'], '%title' => $node->title)));
}

function pmb_get_odds_for_node($node) {
  $result = db_query('SELECT SUM(amount) summed, delta FROM {pmb_bets} WHERE nid = :nid GROUP BY delta', array(':nid' => $node->nid));
  $total = db_query('SELECT SUM(amount) summed FROM {pmb_bets} WHERE nid = :nid', array(':nid' => $node->nid))->fetch();
  $summed_bets = $total->summed;
  foreach ($result as $record) {
    $outcomes[$record->delta] = array('to_win' => $summed_bets/$record->summed, 'percents' => round($record->summed/$summed_bets, 2)*100);
  }
  return $outcomes;  
}

function pmb_node_view($node, $view_mode) {
  $outcomes = pmb_get_odds_for_node($node);
  $delta = 0;
  while (isset($node->content['field_outcome'][$delta])) {
    $odds = empty($outcomes[$delta]['percents']) ? 0 : $outcomes[$delta]['percents'];
    $to_win = empty($outcomes[$delta]['to_win']) ? 0 : $outcomes[$delta]['to_win'];
    $new_markup = t('@outcome: @odds%. <a href="!place_bet">Bet $1 to win $@win</a>', array(
      '@outcome' => $node->content['field_outcome'][$delta]['#markup'],
      '@odds' => $odds,
      '!place_bet' => url('pmb/add/' . $node->nid . '/' . $delta),
      '@win' => round($to_win, 2) - 1,
    ));
    $node->content['field_outcome'][$delta]['#markup'] = $new_markup;
    $delta++;
  }
}



